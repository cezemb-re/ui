@use "~@cezembre/fronts/dist/screens";
@use "../styles/fonts";
@use "../styles/colors";

.cezembre-ui-button {
  display: block;
  cursor: pointer;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  border: none;
  outline: none;
  text-decoration: none;
  flex-shrink: 0;
  margin: 0;
  padding: 0 15px;
  background: transparent;
  position: relative;
  transition: background linear 200ms, border linear 200ms;

  &.square {
    border-radius: 8px;
  }

  > .container {
    width: 100%;
    height: 100%;
    position: relative;
    z-index: 0;
    display: flex;
    align-items: stretch;
    justify-content: space-between;

    > .body {
      display: flex;
      align-items: stretch;
      justify-content: flex-start;
      flex-shrink: 2;
      min-width: 0;

      > .left-icon {
        align-self: center;
        flex-shrink: 0;
        margin-right: 15px;
      }

      > span {
        @include fonts.JetBrainsMono(.9em, colors.$lead, bold);
        align-self: center;
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        flex-shrink: 2;

        @include screens.laptop() {
          font-size: .85em;
        }

        @include screens.tablet() {
          font-size: .8em;
        }
      }
    }

    > .right-icon {
      align-self: center;
      flex-shrink: 0;
      margin-left: 15px;
    }
  }

  > .pending {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    justify-content: center;
    align-items: center;
    background: $color-lead;
    border-radius: 8px;
    display: flex;
    visibility: hidden;
    opacity: 0;
    transition: visibility linear 100ms, opacity linear 100ms;
  }

  &.small {
    height: 32px;

    &.round {
      border-radius: 16px;
    }

    > .container > .body > span {
      padding: 0 10px;
    }
  }

  &.medium {
    height: 36px;

    &.round {
      border-radius: 18px;
    }
  }

  &.large {
    height: 40px;

    &.round {
      border-radius: 20px;
    }
  }

  &.filled {
    background: colors.$lead;

    > .container {

      svg {
        fill: colors.$lead-light;
      }

      > .body > span {
        color: colors.$lead-light;
      }
    }

    &:hover, &.active {
      background: colors.$alternative;
    }
  }

  &.outlined {
    border: solid colors.$lead 1px;

    > .container {
      svg {
        fill: colors.$lead;
      }
    }

    &:hover, &.active {
      background: colors.$lead;

      > .container {
        svg {
          fill: colors.$lead-light;
        }

        > .body > span {
          color: colors.$lead-light;
        }
      }
    }
  }

  &.text {
    > .container {
      svg {
        fill: colors.$lead;
      }
    }

    &:hover, &.active {
      background: colors.$lead;

      > .container {
        svg {
          fill: colors.$lead-light;
        }

        > .container > .body > span {
          color: colors.$lead-light;
        }
      }
    }
  }

  &.link {
    padding: 0;

    > .container {
      svg {
        fill: colors.$text-light;
      }

      > .body > span {
        color: colors.$text-light;
      }
    }

    &:hover {
      > .container {
        svg {
          fill: rgba(colors.$text, .4);
        }

        > .body > span {
          color: rgba(colors.$text, .4);
        }
      }
    }

    &.active {
      > .container {
        svg {
          fill: colors.$lead;
        }

        > .body > span {
          color: colors.$lead;
        }
      }
    }
  }

  &.light {
    &.text {
      svg {
        fill: colors.$text-light;
      }

      > .container > .body > span {
        color: colors.$text-light;
      }

      &:hover {
        background: none;

        svg {
          fill: colors.$text-medium;
        }

        > .container > .body > span {
          color: colors.$text-medium;
        }
      }

      &.active {
        background: none;

        svg {
          fill: colors.$lead;
        }

        > .container > .body > span {
          color: colors.$lead;
        }
      }
    }
  }

  &.disabled {
    pointer-events: none;
    background: colors.$background;

    > .container > .body {
      > .left-icon svg, > .right-icon svg {
        fill: colors.$placeholder;
      }

      > span {
        color: colors.$placeholder;
      }
    }
  }

  &.pending > .pending {
    visibility: visible;
    opacity: 1;
  }
}
